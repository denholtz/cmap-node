{"version":3,"sources":["serviceWorker.js","Redux/actionTypes/catalog.js","asyncRequestStates.js","Redux/actionTypes/user.js","Redux/Reducers/ui.js","Redux/Reducers/index.js","Redux/Reducers/catalog.js","Redux/Reducers/user.js","Redux/actionTypes/ui.js","Redux/actions/user.js","Redux/actions/catalog.js","Redux/actions/ui.js","config.js","api.js","Redux/sagas.js","Redux/store.js","Components/LoadingSpinner.js","Components/ApiKeyManagement.js","Components/LoginRequiredPrompt.js","Components/Home.js","Components/GridDetail.js","Components/AGGridWrapper.js","Components/Catalog.js","Components/RegistrationCard.js","Components/RegistrationStepper.js","Components/Register.js","Components/Visualization.js","Components/LoginDialog.js","Components/TopNavBar.js","Components/SnackbarWrapper.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RETRIEVAL_REQUEST_SEND","states","inProgress","failed","succeeded","expired","LOG_OUT","LOGIN_REQUEST_SEND","REGISTRATION_REQUEST_SEND","VALIDATION_REQUEST_SEND","KEY_RETRIEVAL_REQUEST_SEND","KEY_CREATION_REQUEST_SEND","uiResetState","catalogRequestState","loginDialogIsOpen","registrationActiveStep","userLoginState","userLoginError","userValidationState","userValidationError","userRegistrationState","apiKeyRetrievalState","apiKeyCreationState","initialState","catalog","snackbarIsOpen","snackbarMessage","user","JSON","parse","Cookies","get","apiKeys","reducedReducer","reduceReducers","state","action","type","Object","objectSpread","payload","keys","message","userLoginRequestProcessing","userLoginRequestFailure","error","userLoginRequestSuccess","storeInfo","logOut","userActionTypes","destroyInfo","userValidationRequestProcessing","userValidationRequestFailure","userValidationRequestSuccess","userRegistrationRequestProcessing","userRegistrationRequestFailure","userRegistrationRequestSuccess","keyRetrievalRequestSend","keyRetrievalRequestSuccess","keyRetrievalRequestFailure","keyCreationRequestProcessing","keyCreationRequestSuccess","retrievalRequestProcessing","retrievalRequestSuccess","retrievalRequestFailure","showLoginDialog","hideLoginDialog","registrationNextActiveStep","restoreInterfaceDefaults","snackbarOpen","apiUrl","fetchOptions","credentials","postOptions","method","headers","Content-Type","api","login","fetch","body","stringify","logout","register","validate","retrieve","asyncToGenerator","regenerator_default","a","mark","_callee","decoder","ndjsonParser","response","reader","readerIsDone","chunk","wrap","_context","prev","next","TextDecoder","ndjson","on","data","push","sent","ok","abrupt","getReader","read","done","write","decode","value","stop","keyRetrieval","_callee2","_context2","json","keyCreation","_ref3","_callee3","description","_context3","concat","trim","_x","apply","this","arguments","userLogin","userLogout","userRegistration","userValidation","catalogRetrieval","watchUserLogin","watchUserLogout","watchUserRegistration","watchUserValidation","watchCatalogRetrieval","watchKeyRetrieval","watchKeyCreationRequest","rootSaga","userInfo","put","userActions","call","interfaceActions","_marked","_marked2","_marked3","result","_context4","_marked4","_context5","catalogActions","_marked5","_context6","_marked6","_context7","_marked7","_context8","takeLatest","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","catalogActionTypes","_marked12","_context13","_marked13","_context14","_marked14","_context15","all","_marked15","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","LoadingSpinner","props","react_default","createElement","CircularProgress_default","size","mapDispatchToProps","keyCreationRequestSend","ApiKeyManagement","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleClick","handleChange","event","setState","target","classes","Fragment","Paper_default","className","root","Typography_default","variant","apiKeyTableHeader","Divider_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","apiKey","index","key","Description","showChildOnHover","keyTableCell","Api_Key","Grid_default","container","alignItems","justify","spacing","item","TextField_default","margin","id","name","onChange","placeholder","descriptionField","Button_default","disabled","length","color","onClick","Components_LoadingSpinner","Component","connect","ownProps","withStyles","theme","width","marginTop","unit","paddingTop","minWidth","marginBottom","visibility","&:hover span","LoginRequiredPrompt","Home","Components_ApiKeyManagement","Components_LoginRequiredPrompt","tableMapping","title","wrapper","height","infoCard","padding","gridClass","gridItem","display","justifyContent","datasetDescriptionWrapper","whiteSpace","overflow","datasetDescription","vizSampleImage","variableDetailTable","marginLeft","marginRight","variableDetailTableRow","console","log","xs","src","imageSource","alt","dataSource","distributor","row","detailCellRendererParams","template","columnDefs","headerName","field","sortable","filter","tooltipField","cellRenderer","cellStyle","textAlign","hide","enableRowGroup","defaultColDef","resizable","autoGroupColumnDef","AGGridWrapper","filterText","gridApi","setQuickFilter","onGridReady","params","columnApi","sizeColumnsToFit","handleColumnRowGroupChanged","columns","forEach","column","setColumnVisible","colId","render","gridWrapper","autoFocus","ag_grid_react_main","rowData","suppressDragLeaveHidesColumns","rowGroupPanelShow","groupMultiAutoColumn","onColumnRowGroupChanged","enableBrowserTooltips","masterDetail","frameworkComponents","myDetailCellRenderer","GridDetail","detailCellRenderer","detailRowHeight","retrievalRequestSend","Catalog","determineContent","Components_AGGridWrapper","content","registrationCard","textField","fields","inputFieldState","Card_default","inputFieldInfo","label","valid","helperText","requirement","registrationPreviousActiveStep","userRegistrationRequestSend","userValidationRequestSend","username","email","getCardInfo","firstName","optional","lastName","institute","department","country","password","confirmPassword","RegistrationStepper","validateField","rawValue","pattern","previousState","newCardState","toConsumableArray","cards","test","processStateToActionPayload","actionPayload","card","cardKey","currentCardIsValid","currentCard","handleNext","handleBack","newValue","fieldName","newCard","steps","activeStep","cardInfoArray","Stepper_default","Step_default","StepLabel_default","instructions","Components_RegistrationCard","button","buttonProgress","position","top","left","Register","Components_RegistrationStepper","INITIAL_VIEW_STATE","latitude","longitude","zoom","bearing","pitch","Visualization","deckWrapper","esm","controller","initialViewState","stroked","filled","lineWidthMinPixels","opacity","getLineDashArray","getLineColor","getFillColor","userLoginRequestSend","LoginDialog","handleLogin","handleClose","clearState","Dialog_default","open","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","withRouter","TopNavBar","defineProperty","handleLogOut","getCurrentPath","pathname","beepBoop","set","AppBar_default","Toolbar_default","Tabs_default","Tab_default","component","Link","to","Components_LoginDialog","inlineBlock","snackbarClose","Snackbar_default","autoHideDuration","routes","react_router_dom","Components_TopNavBar","Components_SnackbarWrapper","react_router","exact","path","createMuiTheme","palette","secondary","main","grey","primary","typography","useNextVariants","fontFamily","join","overrides","MuiOutlinedInput","input","MuiFormControl","marginNormal","App","styles","LicenseManager","setLicenseKey","rootElement","document","getElementById","ReactDOM","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0682b9f9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const RETRIEVAL_REQUEST_SEND = 'CATALOG_RETRIEVAL_REQUEST_SEND';\r\nexport const RETRIEVAL_REQUEST_SUCCESS = 'CATALOG_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const RETRIEVAL_REQUEST_FAILURE = 'CATALOG_RETRIEVAL_REQUEST_FAILURE';\r\nexport const RETRIEVAL_REQUEST_PROCESSING = 'CATALOG_RETRIEVAL_REQUEST_PROCESSING';","// Enum for async requests.\r\n\r\nconst states = {\r\n    inProgress: 'inProgress',\r\n    failed: 'failed',\r\n    succeeded: 'succeeded',\r\n    expired: 'expired'\r\n}\r\n\r\nexport default states;","export const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const STORE_INFO = 'STORE_INFO';\r\nexport const DESTROY_INFO = 'DESTROY_INFO';\r\n\r\nexport const LOGIN_REQUEST_SEND = 'LOGIN_REQUEST_SEND';\r\nexport const LOGIN_REQUEST_PROCESSING = 'LOGIN_REQUEST_PROCESSING';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILURE = 'LOGIN_REQUEST_FAILURE';\r\nexport const LOGIN_REQUEST_CLEAR_ERROR = 'LOGIN_REQUEST_CLEAR_ERROR';\r\n\r\nexport const REGISTRATION_REQUEST_SEND = 'REGISTRATION_REQUEST_SEND';\r\nexport const REGISTRATION_REQUEST_PROCESSING = 'REGISTRATION_REQUEST_PROCESSING';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILURE = 'REGISTRATION_REQUEST_FAILURE';\r\n\r\nexport const VALIDATION_REQUEST_SEND = 'VALIDATION_REQUEST_SEND';\r\nexport const VALIDATION_REQUEST_PROCESSING = 'VALIDATION_REQUEST_PROCESSING';\r\nexport const VALIDATION_REQUEST_SUCCESS = 'VALIDATION_REQUEST_SUCCESS';\r\nexport const VALIDATION_REQUEST_FAILURE = 'VALIDATION_REQUEST_FAILURE';\r\n\r\nexport const KEY_RETRIEVAL_REQUEST_SEND = 'KEY_RETRIEVAL_REQUEST_SEND';\r\nexport const KEY_RETRIEVAL_REQUEST_SUCCESS = 'KEY_RETRIEVAL_REQUEST_SUCCESS';\r\nexport const KEY_RETRIEVAL_REQUEST_FAILURE = 'KEY_RETRIEVAL_REQUEST_FAILURE';\r\n\r\nexport const KEY_CREATION_REQUEST_SEND = 'KEY_CREATION_REQUEST_SEND';\r\nexport const KEY_CREATION_REQUEST_PROCESSING = 'KEY_CREATION_REQUEST_PROCESSING';\r\nexport const KEY_CREATION_REQUEST_SUCCESS = 'KEY_CREATION_REQUEST_SUCCESS';\r\nexport const KEY_CREATION_REQUEST_FAILURE = 'KEY_CREATION_REQUEST_FAILURE';","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nconst uiResetState = {\r\n  catalogRequestState: null,\r\n\r\n  loginDialogIsOpen: false,\r\n  registrationActiveStep: 0,\r\n\r\n  userLoginState: null,\r\n  userLoginError: null,\r\n\r\n  userValidationState: null,\r\n  userValidationError: null,\r\n\r\n  userRegistrationState: null,\r\n\r\n  apiKeyRetrievalState: null,\r\n  apiKeyCreationState: null\r\n}\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG: return {...state, loginDialogIsOpen: true};\r\n    case interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG: return {...state, loginDialogIsOpen: false, userLoginError: null};\r\n    case interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep + 1}\r\n    case interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP: return {...state, registrationActiveStep: state.registrationActiveStep - 1}\r\n    case interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS: return {\r\n      ...state,\r\n      ...uiResetState\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_OPEN: return {\r\n      ...state,\r\n      snackbarIsOpen: true,\r\n      snackbarMessage: action.payload.message\r\n    }\r\n    case interfaceActionTypes.SNACKBAR_CLOSE: return {...state, snackbarIsOpen: false}\r\n    default: return state;\r\n  }\r\n}","import catalog from './catalog';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport reduceReducers from 'reduce-reducers';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Consider building this object from initial states from each reducer\r\n// ** When adding new keys to redux store consider whether they need to be\r\n// reset on navigation for UI purposes. If so, add them with a default state\r\n// to the uiResetState in the ui reducer **\r\nconst initialState = {\r\n    // Catalog state pieces\r\n    catalogRequestState: null,\r\n    catalog: null,\r\n\r\n    // Interface state pieces\r\n    loginDialogIsOpen: false,\r\n    registrationActiveStep: 0,\r\n    snackbarIsOpen: false,\r\n    snackbarMessage: null,\r\n\r\n    // User state pieces\r\n    user: JSON.parse(Cookies.get('UserInfo') || null),\r\n\r\n    apiKeys: null,\r\n    apiKeyRetrievalState: null,\r\n    apiKeyCreationState: null,\r\n\r\n    userLoginState: null,\r\n\r\n    userValidationState: null,\r\n\r\n    userRegistrationState: null\r\n\r\n    // Visualization state pieces\r\n}\r\n\r\nconst reducedReducer = reduceReducers(initialState, catalog, user, ui);\r\n\r\nexport default reducedReducer;","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS: return {\r\n      ...state, \r\n      catalogRequestState: states.succeeded, \r\n      catalog: action.payload.catalog\r\n    }\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_FAILURE: return {...state, catalogRequestState: states.failed}\r\n    case catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING: return {...state, catalogRequestState: states.inProgress}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as userActionTypes from '../actionTypes/user';\r\nimport states from '../../asyncRequestStates';\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {    \r\n\r\n    case userActionTypes.LOGIN_REQUEST_PROCESSING: return {...state, userLoginState: states.inProgress}\r\n    case userActionTypes.LOGIN_REQUEST_SUCCESS: return {...state, userLoginState: states.succeeded, userLoginError: null}\r\n    case userActionTypes.LOGIN_REQUEST_FAILURE: return {...state, userLoginState: states.failed}\r\n    case userActionTypes.LOGIN_REQUEST_CLEAR_ERROR: return {...state, userLoginError: null}\r\n\r\n    case userActionTypes.STORE_INFO: return {...state, user: action.payload.user}\r\n    case userActionTypes.DESTROY_INFO: return {...state, user: null}\r\n\r\n    case userActionTypes.VALIDATION_REQUEST_PROCESSING: return {...state, userValidationState: states.inProgress}\r\n    case userActionTypes.VALIDATION_REQUEST_FAILURE: return {...state, userValidationState: states.failed}\r\n    case userActionTypes.VALIDATION_REQUEST_SUCCESS: return {...state, userValidationState: null}\r\n\r\n    case userActionTypes.REGISTRATION_REQUEST_PROCESSING: return {...state, userRegistrationState: states.inProgress}\r\n    case userActionTypes.REGISTRATION_REQUEST_FAILURE: return {...state, userRegistrationState: states.failed}\r\n    case userActionTypes.REGISTRATION_REQUEST_SUCCESS: return {...state, userRegistrationState: states.succeeded}\r\n\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS: return {...state, apiKeys: action.payload.keys}\r\n    case userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE: return {...state, apiKeyRetrievalState: states.failed}\r\n\r\n    case userActionTypes.KEY_CREATION_REQUEST_PROCESSING: return {...state, apiKeyCreationState: states.inProgress}\r\n    case userActionTypes.KEY_CREATION_REQUEST_FAILURE: return {...state, apiKeyCreationState: states.failed}\r\n    case userActionTypes.KEY_CREATION_REQUEST_SUCCESS: return {...state, apiKeyCreationState: states.succeeded}\r\n\r\n    default: return state;\r\n    }\r\n}","export const INTERFACE_SHOW_LOGIN_DIALOG = \"INTERFACE_SHOW_LOGIN_DIALOG\";\r\nexport const INTERFACE_HIDE_LOGIN_DIALOG = \"INTERFACE_HIDE_LOGIN_DIALOG\";\r\n\r\nexport const REGISTRATION_NEXT_ACTIVE_STEP = 'REGISTRATION_NEXT_ACTIVE_STEP';\r\nexport const REGISTRATION_PREVIOUS_ACTIVE_STEP = 'REGISTRATION_PREVIOUS_ACTIVE_STEP';\r\n\r\nexport const RESTORE_INTERFACE_DEFAULTS = 'RESTORE_INTERFACE_DEFAULTS';\r\n\r\nexport const SNACKBAR_OPEN = 'SNACKBAR_OPEN';\r\nexport const SNACKBAR_CLOSE = 'SNACKBAR_CLOSE';","import * as userActionTypes from '../actionTypes/user';\r\n\r\n// Login actions\r\nexport const userLoginRequestSend = (username, password) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n});\r\n\r\nexport const userLoginRequestProcessing = () => {\r\n    return {type: userActionTypes.LOGIN_REQUEST_PROCESSING};\r\n};\r\n\r\nexport const userLoginRequestFailure = (error) => ({\r\n    type: userActionTypes.LOGIN_REQUEST_FAILURE,\r\n});\r\n\r\nexport const userLoginRequestSuccess = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_SUCCESS\r\n});\r\n\r\nexport const storeInfo = (user) => ({\r\n    type: userActionTypes.STORE_INFO,\r\n    payload: {\r\n        user\r\n    }\r\n})\r\n\r\nexport const userLoginRequestClearError = () => ({\r\n    type: userActionTypes.LOGIN_REQUEST_CLEAR_ERROR\r\n})\r\n\r\n// Log out actions\r\nexport const logOut = () => ({\r\n    type:userActionTypes.LOG_OUT\r\n});\r\n\r\nexport const destroyInfo = () => ({\r\n    type: userActionTypes.DESTROY_INFO\r\n})\r\n\r\n// Validation actions\r\nexport const userValidationRequestSend = (username, email) => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SEND,\r\n    payload: {\r\n        username,\r\n        email\r\n    }\r\n});\r\n\r\nexport const userValidationRequestProcessing = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const userValidationRequestFailure = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const userValidationRequestSuccess = () => ({\r\n    type: userActionTypes.VALIDATION_REQUEST_SUCCESS\r\n})\r\n\r\n// Registration actions\r\nexport const userRegistrationRequestSend = (payload) => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SEND,\r\n    payload\r\n});\r\n\r\nexport const userRegistrationRequestProcessing = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_PROCESSING\r\n});\r\n\r\nexport const userRegistrationRequestFailure = () => ({\r\n    type:userActionTypes.REGISTRATION_REQUEST_FAILURE\r\n});\r\n\r\nexport const userRegistrationRequestSuccess = () => ({\r\n    type: userActionTypes.REGISTRATION_REQUEST_SUCCESS\r\n});\r\n\r\n// Api key retrieval actions\r\nexport const keyRetrievalRequestSend = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const keyRetrievalRequestSuccess = (keys) => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        keys\r\n    }\r\n})\r\n\r\nexport const keyRetrievalRequestFailure = () => ({\r\n    type: userActionTypes.KEY_RETRIEVAL_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSend = (description) => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SEND,\r\n    payload: {\r\n        description\r\n    }\r\n})\r\n\r\nexport const keyCreationRequestProcessing = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_PROCESSING\r\n})\r\n\r\nexport const keyCreationRequestFailure = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_FAILURE\r\n})\r\n\r\nexport const keyCreationRequestSuccess = () => ({\r\n    type: userActionTypes.KEY_CREATION_REQUEST_SUCCESS\r\n})\r\n","import * as catalogActionTypes from '../actionTypes/catalog';\r\n\r\nexport const retrievalRequestSend = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SEND\r\n})\r\n\r\nexport const retrievalRequestProcessing = () => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_PROCESSING\r\n})\r\n\r\nexport const retrievalRequestSuccess = (catalog) => ({\r\n    type: catalogActionTypes.RETRIEVAL_REQUEST_SUCCESS,\r\n    payload: {\r\n        catalog\r\n    }\r\n})\r\n\r\nexport const retrievalRequestFailure = () => ({\r\n    type:catalogActionTypes.RETRIEVAL_REQUEST_FAILURE\r\n})","import * as interfaceActionTypes from '../actionTypes/ui';\r\n\r\nexport const showLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_SHOW_LOGIN_DIALOG\r\n})\r\n\r\nexport const hideLoginDialog = () => ({\r\n    type: interfaceActionTypes.INTERFACE_HIDE_LOGIN_DIALOG\r\n})\r\n\r\nexport const registrationNextActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_NEXT_ACTIVE_STEP\r\n})\r\n\r\nexport const registrationPreviousActiveStep = () => ({\r\n    type: interfaceActionTypes.REGISTRATION_PREVIOUS_ACTIVE_STEP\r\n})\r\n\r\nexport const restoreInterfaceDefaults = () => ({\r\n    type: interfaceActionTypes.RESTORE_INTERFACE_DEFAULTS\r\n})\r\n\r\nexport const snackbarOpen = (message) => ({\r\n    type: interfaceActionTypes.SNACKBAR_OPEN,\r\n    payload:\r\n    {\r\n        message\r\n    }\r\n})\r\n\r\nexport const snackbarClose = () => ({\r\n    type: interfaceActionTypes.SNACKBAR_CLOSE\r\n})","export const clientHost = 'http://localhost:3000'\r\nexport const apiUrl = 'http://simonscmap.io'\r\n","import ndjson from 'ndjson';\r\n\r\nimport { apiUrl } from './config';\r\n\r\nconst fetchOptions = {\r\n    credentials: 'include'\r\n}\r\n\r\nconst postOptions = {\r\n    ...fetchOptions,\r\n    method: 'POST',\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n}\r\n\r\nconst api = {};\r\napi.user = {};\r\napi.dataRetrieval = {};\r\napi.catalog = {};\r\n\r\napi.user.login = (user) => {\r\n    return fetch(apiUrl + '/user/signin', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    });\r\n}\r\n\r\napi.user.logout = () => {\r\n    return fetch(apiUrl + '/user/signout', fetchOptions);\r\n}\r\n\r\napi.user.register = (user) => {\r\n    return fetch(apiUrl + '/user/signup', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.user.validate = (user) => {\r\n    return fetch(apiUrl + '/user/validate', {\r\n        ...postOptions,\r\n        body: JSON.stringify(user),\r\n    })\r\n}\r\n\r\napi.catalog.retrieve = async() => {\r\n\r\n    const decoder = new TextDecoder();\r\n    let catalog = [];\r\n\r\n    let ndjsonParser = ndjson.parse();\r\n    ndjsonParser.on('data', data => {\r\n        catalog.push(data);\r\n    })\r\n\r\n    let response = await fetch(apiUrl + '/catalog/', fetchOptions);\r\n\r\n    if(!response.ok) return false;\r\n\r\n    let body = response.body;\r\n    let reader = body.getReader();\r\n    let readerIsDone = false;\r\n\r\n    while(!readerIsDone){\r\n        let chunk = await reader.read();\r\n        if(chunk.done) {\r\n            readerIsDone = true;\r\n        }\r\n        else {\r\n            ndjsonParser.write(decoder.decode(chunk.value));\r\n        };\r\n    }\r\n    return catalog;\r\n}\r\n\r\napi.user.keyRetrieval = async() => {\r\n    let response = await fetch(apiUrl + '/user/retrieveapikeys', fetchOptions);\r\n    if(!response.ok) return false;\r\n    return await response.json();\r\n}\r\n\r\napi.user.keyCreation = async(description) => {\r\n    return await fetch(apiUrl + `/user/generateapikey?description=${description.trim()}`, fetchOptions);\r\n}\r\n\r\nexport default api;","import { put, takeLatest, all, call } from 'redux-saga/effects';\r\nimport Cookies from 'js-cookie';\r\n\r\nimport * as userActions from './actions/user';\r\nimport * as catalogActions from './actions/catalog';\r\nimport * as interfaceActions from './actions/ui';\r\n\r\nimport * as userActionTypes from './actionTypes/user';\r\nimport * as catalogActionTypes from './actionTypes/catalog'\r\n\r\nimport api from '../api';\r\n\r\nfunction* userLogin(action) {\r\n    yield put(userActions.userLoginRequestProcessing());\r\n    let result = yield call(api.user.login, action.payload);\r\n    if(result.ok){\r\n        var userInfo = JSON.parse(Cookies.get('UserInfo'));\r\n        yield put(userActions.userLoginRequestSuccess());\r\n        yield put(interfaceActions.hideLoginDialog());\r\n        yield put(userActions.storeInfo(userInfo));\r\n        yield put(interfaceActions.snackbarOpen('Login was successful!'))\r\n    } else {\r\n        yield put(userActions.userLoginRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Login failed.'));\r\n    }\r\n}\r\n\r\nfunction* userLogout(){\r\n    yield call(api.user.logout);\r\n    yield put(userActions.destroyInfo());\r\n    yield put(interfaceActions.snackbarOpen('You have logged out.'))\r\n}\r\n\r\nfunction* userRegistration(action){\r\n    yield put(userActions.userRegistrationRequestProcessing());\r\n    let result = yield call(api.user.register, action.payload);\r\n    if(result.ok){\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n        yield put(userActions.userRegistrationRequestSuccess());\r\n        yield put(interfaceActions.snackbarOpen('Registration was successful. Please log in.'));\r\n        yield put(interfaceActions.showLoginDialog());\r\n    } else {\r\n        yield put(userActions.userRegistrationRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('Registration failed.'))\r\n    }\r\n}\r\n\r\nfunction* userValidation(action){\r\n    yield put(userActions.userValidationRequestProcessing());\r\n    let result = yield call(api.user.validate, action.payload);\r\n    let isValid = yield result.json();\r\n    if(isValid){\r\n        yield put(userActions.userValidationRequestSuccess());\r\n        yield put(interfaceActions.registrationNextActiveStep());\r\n    } else {\r\n        yield put(userActions.userValidationRequestFailure());\r\n    }\r\n}\r\n\r\nfunction* catalogRetrieval(action){\r\n    yield put(catalogActions.retrievalRequestProcessing());\r\n    let catalog = yield call(api.catalog.retrieve);\r\n    if(!catalog) {\r\n        yield put(catalogActions.retrievalRequestFailure());\r\n    } else{\r\n        yield put(catalogActions.retrievalRequestSuccess(catalog));\r\n    }\r\n}\r\n\r\nfunction* keyRetrieval(action){\r\n    let result = yield call(api.user.keyRetrieval);\r\n    if(!result){\r\n        yield put(userActions.keyRetrievalRequestFailure());\r\n        yield put(interfaceActions.snackbarOpen('API Key Retrieval Failed'));\r\n    } else {\r\n        yield put(userActions.keyRetrievalRequestSuccess(result.keys));\r\n    }\r\n}\r\n\r\nfunction* keyCreation(action){\r\n    yield put(userActions.keyCreationRequestProcessing());\r\n    let result = yield call(api.user.keyCreation, action.payload.description);\r\n    if(!result.ok) yield put(interfaceActions.snackbarOpen(\"We were unable to create a new API key.\"));\r\n    else {\r\n        yield put(interfaceActions.snackbarOpen(\"A new API key was created\"));\r\n        yield put(userActions.keyCreationRequestSuccess());\r\n        yield put(userActions.keyRetrievalRequestSend());        \r\n    }\r\n}\r\n\r\nfunction* watchUserLogin() {\r\n    yield takeLatest(userActionTypes.LOGIN_REQUEST_SEND, userLogin);\r\n}\r\n\r\nfunction * watchUserLogout() {\r\n    yield takeLatest(userActionTypes.LOG_OUT, userLogout)\r\n}\r\n\r\nfunction* watchUserRegistration() {\r\n    yield takeLatest(userActionTypes.REGISTRATION_REQUEST_SEND, userRegistration);\r\n}\r\n\r\nfunction* watchUserValidation(){\r\n    yield takeLatest(userActionTypes.VALIDATION_REQUEST_SEND, userValidation);\r\n}\r\n\r\nfunction* watchCatalogRetrieval(){\r\n    yield takeLatest(catalogActionTypes.RETRIEVAL_REQUEST_SEND, catalogRetrieval);\r\n}\r\n\r\nfunction* watchKeyRetrieval(){\r\n    yield takeLatest(userActionTypes.KEY_RETRIEVAL_REQUEST_SEND, keyRetrieval);\r\n}\r\n\r\nfunction* watchKeyCreationRequest(){\r\n    yield takeLatest(userActionTypes.KEY_CREATION_REQUEST_SEND, keyCreation);\r\n}\r\n  \r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchUserLogin(),\r\n        watchUserRegistration(),\r\n        watchUserValidation(),\r\n        watchUserLogout(),\r\n        watchCatalogRetrieval(),\r\n        watchKeyRetrieval(),\r\n        watchKeyCreationRequest()\r\n    ])\r\n}\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst LoadingSpinner = (props) => (\r\n    <CircularProgress size={props.size}/>\r\n)\r\n\r\nexport default LoadingSpinner;","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { keyRetrievalRequestSend, keyCreationRequestSend } from '../Redux/actions/user';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport states from '../asyncRequestStates';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    apiKeys: state.apiKeys,\r\n    apiKeyCreationState: state.apiKeyCreationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    keyRetrievalRequestSend,\r\n    keyCreationRequestSend\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '800px',\r\n        marginTop: theme.spacing.unit * 3,\r\n        margin:'auto',\r\n        paddingTop: theme.spacing.unit * 2\r\n      },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    apiKeyTableHeader: {\r\n        marginBottom: theme.spacing.unit * 2,\r\n    },\r\n    keyTableCell : {\r\n        visibility: 'hidden'\r\n    },\r\n    showChildOnHover: {\r\n        '&:hover span': {\r\n            visibility: 'visible'\r\n          },\r\n    }\r\n})\r\n\r\nclass ApiKeyManagement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.apiKeys) this.props.keyRetrievalRequestSend();\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.keyCreationRequestSend(this.state.description);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({...this.state, description: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>           \r\n                {this.props.apiKeys ?\r\n                    <Paper className={classes.root}>             \r\n                        <Typography variant=\"subtitle1\" className={classes.apiKeyTableHeader}>\r\n                            Your API Keys\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell variant='head' align='center'>Description</TableCell>\r\n                                <TableCell variant='head' align='center'>Key (hover mouse to view)</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>            \r\n                                {this.props.apiKeys.map((apiKey, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align='center'>{apiKey.Description}</TableCell>\r\n                                        <TableCell align='center' className={classes.showChildOnHover}><span className={classes.keyTableCell}>{apiKey.Api_Key}</span></TableCell>\r\n                                    </TableRow>\r\n                                ))   \r\n                                }  \r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n                    : ''\r\n                }\r\n                <Paper className={classes.root}>\r\n                    <Typography variant=\"subtitle1\">\r\n                        Generate a new API key\r\n                    </Typography>\r\n                    <Grid container={true} alignItems='center' justify='center' spacing={16}>\r\n                        <Grid item>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                variant='outlined'\r\n                                name='filterText'\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Key Description'\r\n                                className={classes.descriptionField}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" disabled={this.state.description.length < 1} color=\"primary\" onClick={this.handleClick}>\r\n                                Generate API Key\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {this.props.apiKeyCreationState === states.inProgress ? <LoadingSpinner size={18}/> : ''}\r\n                    {this.props.apiKeyCreationState === states.failed ? <span>Key creation failed</span> : ''}\r\n            </Paper>\r\n            </React.Fragment>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ApiKeyManagement));","import React from 'react';\r\n\r\nconst LoginRequiredPrompt = (props) => {\r\n    return (\r\n        <p>This feature requires login. Please log in.</p>\r\n    )\r\n}\r\n\r\nexport default LoginRequiredPrompt;","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport ApiKeyManagement from './ApiKeyManagement';\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    user : state.user,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = theme => ({\r\n\r\n})\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.user) return <LoginRequiredPrompt/>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.user && <ApiKeyManagement/>}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Card from '@material-ui/core/Card';\r\n// import Divider from '@material-ui/core/Divider';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { apiUrl } from '../config';\r\n\r\nconst imageSource = apiUrl + '/images/catalog/'\r\n\r\nconst tableMapping = [\r\n    ['Variable Name', 'variable'],\r\n    ['Spatial Resolution', 'spatialResolution'],\r\n    ['Temporal Resolution', 'temporalResolution'],\r\n    ['Unit', 'unit'],\r\n    ['Process Level', 'processLevel'],\r\n    ['Study Domain', 'studyDomain'],\r\n    ['SQL Table Name', 'tableName']\r\n]\r\n\r\nconst styles = (theme) => ({\r\n    title:{\r\n        marginBottom: theme.spacing.unit\r\n    },\r\n    wrapper: {\r\n        width: '90%',\r\n        margin: '-10px auto 0px auto',\r\n        height: '100%'\r\n    },\r\n    infoCard: {\r\n        padding: theme.spacing.unit * 2,\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridClass: {\r\n        marginTop: theme.spacing.unit * 2,\r\n        height: '100%'\r\n    },\r\n    gridItem: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    datasetDescriptionWrapper: {\r\n        whiteSpace: 'normal',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    datasetDescription: {\r\n        marginBottom: theme.spacing.unit * 2,\r\n        marginTop: theme.spacing.unit\r\n    },\r\n    vizSampleImage: {\r\n        width: '90%'\r\n    },\r\n    variableDetailTable: {\r\n        marginLeft: theme.spacing.unit * 2,\r\n        marginRight: theme.spacing.unit * 2\r\n    },\r\n    variableDetailTableRow: {\r\n        height: '32px'\r\n    }\r\n})\r\n\r\nconst GridDetail = (props) => {\r\n    const {classes} = props;\r\n    console.log(props.data);\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Grid container spacing={8} className={classes.gridClass}>\r\n                <Grid item xs={3} className={classes.gridItem}>\r\n                    <img src={imageSource + 'viz_sample.png'} alt=\"Sample Visualization\" className={classes.vizSampleImage}/>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.gridItem}>\r\n                    <div className={classes.datasetDescriptionWrapper}>\r\n                        <Typography variant='body2' className={classes.datasetDescription}>\r\n                            {props.data.datasetDescription}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Source: {props.data.dataSource}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            Distributor: {props.data.distributor}\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.gridItem}>\r\n                    <Table className={classes.variableDetailTable}>\r\n                        <TableBody>\r\n                            {tableMapping.map((row, index) => (\r\n                                <TableRow key={index} className={classes.variableDetailTableRow}>\r\n                                    <TableCell padding='dense'>{row[0]}</TableCell>\r\n                                    <TableCell padding='dense'>{props.data[row[1]]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (withStyles(styles)(GridDetail));","import React, { Component } from 'react';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport GridDetail from './GridDetail';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst detailCellRendererParams = {\r\n  template:\r\n    '<div style=\"height: 100%; box-sizing: border-box\" class=\"testClass\">' +\r\n      '  <div style=\"height: 10%;\">Call Details</div>' +\r\n      '  <div ref=\"eDetailGrid\" style=\"height: 90%;\"></div>' +\r\n    \"</div>\"\r\n}\r\n\r\nconst columnDefs = [\r\n  {\r\n    headerName: \"Long Name\", \r\n    field: \"longName\",\r\n    sortable: true,\r\n    filter: true,\r\n    tooltipField: 'longName',\r\n    cellRenderer: \"agGroupCellRenderer\",\r\n    cellStyle: {\r\n      textAlign:'left'\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Variable\", \r\n    field: \"variable\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Table Name\", \r\n    field: \"tableName\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Dataset Name\", \r\n    field: \"datasetName\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true,\r\n    tooltipField: 'datasetName'\r\n  }, \r\n  {\r\n    headerName: \"Make\", \r\n    field: \"make\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Sensor\", \r\n    field: \"sensor\",\r\n    sortable: true,\r\n    filter: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Study Domain\", \r\n    field: \"studyDomain\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  }, \r\n  {\r\n    headerName: \"Process Level\", \r\n    field: \"processLevel\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Spatial Resolution\", \r\n    field: \"spatialResolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Temporal Resolution\", \r\n    field: \"temporalResolution\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true,\r\n    enableRowGroup: true\r\n  },\r\n  {\r\n    headerName: \"Unit\", \r\n    field: \"unit\",\r\n    sortable: true,\r\n    filter: true,\r\n    hide: true\r\n  },\r\n  {\r\n    headerName: \"Key Words\",\r\n    field: 'keywords',\r\n    hide: true\r\n  }\r\n]\r\n\r\nconst styles = (theme) => ({\r\n  gridWrapper: {\r\n    height: '600px', \r\n    width: '80%',\r\n    margin: '30px auto',\r\n  }\r\n})\r\n\r\nconst defaultColDef = {\r\n  resizable: true,\r\n}\r\n\r\nconst autoGroupColumnDef = {\r\n  cellStyle: {\r\n    textAlign:'left'\r\n  }\r\n}\r\n\r\nclass AGGridWrapper extends Component {\r\n  // const { classes } = props;\r\n\r\n  state = {\r\n    filterText: ''\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({...this.state, filterText: event.target.value})\r\n    this.gridApi.setQuickFilter(event.target.value);\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.columnApi = params.columnApi;\r\n\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n\r\n  handleColumnRowGroupChanged = (event) => {\r\n    event.columns.forEach(column => {\r\n      column.columnApi.setColumnVisible(column.colId, false);\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const {classes} = this.props;\r\n    return (\r\n        <div \r\n        className={classes.gridWrapper + \" ag-theme-material\"}\r\n\r\n        >\r\n          <TextField\r\n            autoFocus={true}\r\n            margin=\"normal\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            variant='outlined'\r\n            name='filterText'\r\n            value={this.state.filterText}\r\n            onChange={this.handleChange}\r\n            placeholder='Filter Variables'\r\n          />\r\n  \r\n          <AgGridReact\r\n            // General settings\r\n            columnDefs={columnDefs}\r\n            defaultColDef={defaultColDef}\r\n            rowData={this.props.catalog}\r\n            onGridReady={this.onGridReady}\r\n            suppressDragLeaveHidesColumns= {true}\r\n\r\n            //Settings related to grouping functionality\r\n            rowGroupPanelShow='always'\r\n            groupMultiAutoColumn={true}\r\n            onColumnRowGroupChanged={this.handleColumnRowGroupChanged}\r\n            autoGroupColumnDef={autoGroupColumnDef}\r\n\r\n            enableBrowserTooltips={true}\r\n\r\n            // Settings related to master/detail\r\n            masterDetail={true}\r\n            frameworkComponents= {{ myDetailCellRenderer: GridDetail }}\r\n            detailCellRenderer=\"myDetailCellRenderer\"\r\n            detailRowHeight={280}\r\n            detailCellRendererParams={detailCellRendererParams}\r\n          />\r\n        </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default (withStyles(styles)(AGGridWrapper));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AGGridWrapper from './AGGridWrapper';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nimport { retrievalRequestSend } from '../Redux/actions/catalog';\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    catalogRequestState: state.catalogRequestState,\r\n    catalog : state.catalog\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    retrievalRequestSend\r\n}\r\n\r\nconst styles = (theme) => ({\r\n\r\n})\r\n\r\nclass Catalog extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.catalog) this.props.retrievalRequestSend();\r\n    }\r\n\r\n    determineContent = () => {\r\n        if(this.props.catalog) return <AGGridWrapper catalog={this.props.catalog}/>\r\n        else if(this.props.catalogRequestState === states.inProgress) return <LoadingSpinner size={24}/>\r\n        else if(this.props.catalogRequestState === states.failed) return <p>Failed to get catalog. Have you tried turning it off and then on again?</p>\r\n        else return <p>I don't know how we got here. Please debug the catalog retrieval process.</p>\r\n    }\r\n\r\n    render(){\r\n        let content = this.determineContent();\r\n        return (\r\n            <React.Fragment>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Catalog));","import { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n    registrationCard: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        height:'200px'\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing.unit,\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nconst RegistrationCard = (props) => {\r\n    const { classes } = props;\r\n    const fields = Object.keys(props.inputFieldState);\r\n\r\n    return (\r\n        <Card className={classes.registrationCard}>\r\n            <Grid container spacing={16}>\r\n            {\r\n                fields.map((field, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={fields.length > 2 ? 6 : 12}>\r\n                        <TextField\r\n                            key= {index}\r\n                            name= {props.inputFieldInfo[field].name}\r\n                            label= {props.inputFieldInfo[field].label}\r\n                            value={props.inputFieldState[field].value}\r\n                            className={classes.textField}\r\n                            onChange={props.onChange}\r\n                            type={props.inputFieldInfo[field].type}\r\n                            error={!props.inputFieldState[field].valid}                            \r\n                            helperText={props.inputFieldState[field].valid ? ' ' : props.inputFieldInfo[field].requirement}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }                \r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RegistrationCard);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport RegistrationCard from './RegistrationCard';\r\n\r\nimport { registrationNextActiveStep, registrationPreviousActiveStep } from '../Redux/actions/ui';\r\nimport { userRegistrationRequestSend, userValidationRequestSend } from '../Redux/actions/user';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '60%',\r\n        margin: '5% auto'\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n    },\r\n    registrationCard: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n    },\r\n\r\n    textField: {\r\n        margin:theme.spacing.unit,\r\n        width: 200\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    registrationActiveStep: state.registrationActiveStep,\r\n    userValidationState: state.userValidationState,\r\n    userRegistrationState: state.userRegistrationState\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    registrationNextActiveStep,\r\n    registrationPreviousActiveStep,\r\n\r\n    userRegistrationRequestSend,\r\n\r\n    userValidationRequestSend\r\n}\r\n\r\nconst getSteps = () => ['Your Information', 'Optional Organization Info', 'Security'];\r\nconst getCardInfo = () => ([\r\n    {\r\n        firstName: {\r\n            label:'First Name*',\r\n            name: 'firstName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        lastName: {\r\n            label:'Last Name*',\r\n            name: 'lastName',\r\n            type: 'text',\r\n            requirement: 'Must be 2 or more alphabetical characters.',\r\n            optional: false\r\n        },\r\n        username: {\r\n            label:'Username*',\r\n            name: 'username',\r\n            type: 'text',\r\n            requirement: 'Must be 6 to 20 alphanumeric characters.',\r\n            optional: false\r\n        },\r\n        email: {\r\n            label:'Email Address*',\r\n            name: 'email',\r\n            type: 'email',\r\n            requirement: 'Must be a valid email address.',\r\n            optional: false\r\n        }\r\n    },\r\n    {\r\n        institute: {\r\n            label:'Institute',\r\n            name: 'institute',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        department: {\r\n            label:'Department',\r\n            name: 'department',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        },\r\n        country: {\r\n            label:'Country',\r\n            name: 'country',\r\n            type: 'text',\r\n            requirement: 'Maximum length is 150 characters.',\r\n            optional: true\r\n        }\r\n    },\r\n    {\r\n        password: {\r\n            label:'Password*',\r\n            name: 'password',\r\n            type: 'password',            \r\n            requirement: 'Must be 8 to 32 characters with 1 number and 1 special character.',\r\n            optional: false\r\n        },\r\n        confirmPassword: {\r\n            label:'Confirm Password*',\r\n            name: 'confirmPassword',\r\n            type: 'password',            \r\n            requirement: 'Passwords must match.',\r\n            optional: false\r\n        }\r\n    }\r\n])\r\n\r\nclass RegistrationStepper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cards = []\r\n        getCardInfo().forEach(card => {\r\n            let newCard = {};\r\n            Object.keys(card).forEach(key => {\r\n                newCard[key] = {\r\n                    value: '',\r\n                    valid: true,\r\n                    optional: card[key].optional\r\n                }\r\n            })\r\n            cards.push(newCard);\r\n        })\r\n\r\n        this.state = {\r\n            cards\r\n        }\r\n    }\r\n\r\n    validateField = (name, rawValue) => {\r\n        let value = rawValue.trim();\r\n        let pattern = /$^/;\r\n        switch(name){\r\n            case 'firstName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'lastName':\r\n                pattern = /^[A-Za-z ]{2,40}$/;\r\n                break;\r\n            case 'username':\r\n                pattern = /^[A-Za-z0-9 ]{6,20}$/;\r\n                break;\r\n            case 'email':\r\n                pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\r\n                break;\r\n            case 'institute':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'department':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'country':\r\n                pattern = /^.{0,150}$/\r\n                break;\r\n            case 'password':\r\n                pattern = /^(?=.*[0-9])(?=.*[.!@#$%^&*])[a-zA-Z0-9.!@#$%^&*]{8,32}$/\r\n                this.setState(previousState => {\r\n                    let newCardState = [...previousState.cards];\r\n                    newCardState[2].confirmPassword.valid = Boolean(newCardState[2].confirmPassword.value === value);\r\n                    return {cards: newCardState};\r\n                })\r\n                break;\r\n            case 'confirmPassword':\r\n                return this.state.cards[2].password.value === value;\r\n            default:\r\n                break;\r\n        }\r\n        return pattern.test(value);\r\n    }\r\n\r\n    processStateToActionPayload = () => {\r\n        let actionPayload = {};\r\n        this.state.cards.forEach(card => {\r\n            Object.keys(card).forEach(cardKey => {\r\n                actionPayload[cardKey] = card[cardKey].value;\r\n            })\r\n        })\r\n        console.log('action payload')\r\n        console.log(actionPayload)\r\n        return actionPayload;\r\n    }\r\n\r\n    currentCardIsValid = () => {\r\n        let currentCard = this.state.cards[this.props.registrationActiveStep];\r\n        for(let key in currentCard){\r\n            if(currentCard[key].optional) continue;\r\n            if(!currentCard[key].value || !currentCard[key].valid) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleNext = () => {\r\n        const activeStep = this.props.registrationActiveStep;\r\n        \r\n        switch(activeStep){\r\n            case 0:\r\n                // API request to validate username and email address\r\n                let username= this.state.cards[0].username.value;\r\n                let email= this.state.cards[0].email.value;\r\n                this.props.userValidationRequestSend(username, email);\r\n                break;\r\n            case 1:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n            case 2:\r\n                // API request to register user\r\n                this.props.userRegistrationRequestSend(this.processStateToActionPayload())\r\n                break;\r\n            default:\r\n                this.props.registrationNextActiveStep();\r\n                break;\r\n\r\n\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.props.registrationPreviousActiveStep();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        let fieldName = event.target.name;\r\n        let valid = this.validateField(fieldName, newValue);\r\n        this.setState(previousState => {\r\n            let cards = [...previousState.cards];\r\n            cards[this.props.registrationActiveStep][fieldName] = {\r\n                ...cards[this.props.registrationActiveStep][fieldName],\r\n                value: newValue,\r\n                valid\r\n            }\r\n            return {cards};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const steps = getSteps();\r\n        const activeStep = this.props.registrationActiveStep;\r\n        const cardInfoArray = getCardInfo();\r\n\r\n        return (\r\n        <div className={classes.root}>\r\n            <Stepper activeStep={activeStep}>\r\n            {steps.map((label, index) => {\r\n                return (\r\n                <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n                );\r\n            })}\r\n            </Stepper>\r\n            <div>\r\n            {activeStep === steps.length ? (\r\n                <div>\r\n                <Typography className={classes.instructions}>\r\n                    Registration Completed!\r\n                </Typography>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <RegistrationCard \r\n                        inputFieldState={{...this.state.cards[this.props.registrationActiveStep]}} \r\n                        inputFieldInfo={{...cardInfoArray[this.props.registrationActiveStep]}}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div>\r\n                        <Button\r\n                        disabled={activeStep === 0}\r\n                        onClick={this.handleBack}\r\n                        className={classes.button}\r\n                        >\r\n                            Back\r\n                        </Button>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.handleNext}\r\n                            className={classes.button}\r\n                            disabled={!this.currentCardIsValid() || this.props.userValidationState === states.inProgress}\r\n                        >\r\n                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                        </Button>\r\n                        {this.props.userValidationState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                        {this.props.userValidationState === states.failed && <p>That username or email is already in use. Please enter a different username or email address.</p>}\r\n                        {this.props.userRegistrationState === states.failed && <p>Registration failed. Please try again.</p>}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            </div>\r\n        </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegistrationStepper));","import React, { Component } from 'react';\r\n\r\nimport RegistrationStepper from './RegistrationStepper';\r\n\r\nexport default class Register extends Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <RegistrationStepper/>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport LoginRequiredPrompt from './LoginRequiredPrompt';\r\n\r\nimport { showLoginDialog } from '../Redux/actions/ui';\r\n\r\nimport DeckGL, {GeoJsonLayer} from 'deck.gl';\r\n\r\n// source: Natural Earth http://www.naturalearthdata.com/ via geojson.xyz\r\nconst COUNTRIES =\r\n  'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_admin_0_scale_rank.geojson'; //eslint-disable-line\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n  latitude: 51.47,\r\n  longitude: 0.45,\r\n  zoom: 4,\r\n  bearing: 0,\r\n  pitch: 30\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    deckWrapper: {\r\n        width: '80%',\r\n        height: '80%'\r\n    }\r\n})\r\n\r\nclass Visualization extends Component {\r\n\r\n    componentDidMount(){\r\n        if(!this.props.user) this.props.showLoginDialog();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.props.user) return <LoginRequiredPrompt/>;\r\n        return (\r\n            <div className={classes.deckWrapper}>\r\n                <DeckGL controller={true} initialViewState={INITIAL_VIEW_STATE}>\r\n                    <GeoJsonLayer\r\n                    id=\"base-map\"\r\n                    data={COUNTRIES}\r\n                    stroked={true}\r\n                    filled={true}\r\n                    lineWidthMinPixels={2}\r\n                    opacity={0.4}\r\n                    getLineDashArray={[3, 3]}\r\n                    getLineColor={[60, 60, 60]}\r\n                    getFillColor={[200, 200, 200]}\r\n                    />\r\n                </DeckGL>   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Visualization));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport states from '../asyncRequestStates';\r\n\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { showLoginDialog, hideLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut, userLoginRequestSend } from '../Redux/actions/user';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loginDialogIsOpen: state.loginDialogIsOpen,\r\n        userLoginState: state.userLoginState,\r\n        userLoginError: state.userLoginError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideLoginDialog,\r\n    showLoginDialog,\r\n    logOut,\r\n    userLoginRequestSend,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        margin: theme.spacing.unit,\r\n        position: 'relative',\r\n    },\r\n\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n})\r\n\r\nclass LoginDialog extends Component{\r\n    // Text input state is managed in the TopNavBar component\r\n\r\n    handleLogin = (event) => {\r\n        this.props.userLoginRequestSend(this.props.username, this.props.password);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearState();\r\n        this.props.hideLoginDialog();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        \r\n        return (\r\n            <Dialog\r\n                open={this.props.loginDialogIsOpen}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    Please enter your username and password to log in.\r\n                    </DialogContentText>\r\n\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"normal\"\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        type=\"text\"\r\n                        variant='outlined'\r\n                        name='username'\r\n                        value={this.props.username}\r\n                        onChange={this.props.handleChange}\r\n                    />\r\n\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        id=\"name\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        variant='outlined'\r\n                        name='password'\r\n                        value={this.props.password}\r\n                        onChange={this.props.handleChange}\r\n                    />\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        <div className={classes.wrapper}>\r\n                            <Button color=\"primary\" onClick={this.handleLogin} disabled={!this.props.username || !this.props.password}>\r\n                                Log In\r\n                            </Button>\r\n                            {this.props.userLoginState === states.inProgress && <CircularProgress size={24} className= {classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                    {this.props.userLoginState === states.failed ?\r\n                    <DialogContentText>\r\n                        Login failed. Please try again.\r\n                    </DialogContentText>\r\n                    : ''               \r\n                    }\r\n                </DialogContent>\r\n                \r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(LoginDialog)));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport LoginDialog from './LoginDialog';\r\n\r\nimport { showLoginDialog, restoreInterfaceDefaults } from '../Redux/actions/ui';\r\nimport { logOut } from '../Redux/actions/user';\r\n\r\nconst styles = theme => ({\r\n    inlineBlock: {\r\n        display: 'inline-block'\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    showLoginDialog,\r\n    logOut,\r\n    restoreInterfaceDefaults\r\n}\r\n\r\nclass TopNavBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    \r\n    // Controls login dialog text fields to allow reset from logout button\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.clearState();\r\n        this.props.logOut();\r\n        this.props.restoreInterfaceDefaults();\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    getCurrentPath = () => {\r\n        switch(this.props.location.pathname){\r\n            case '/apikeymanagement': return 0;\r\n            case '/': return 1;\r\n            case '/visualization': return 2;\r\n            case '/register': return 3;\r\n            default: return 0;\r\n        }\r\n    };\r\n\r\n    // Debug button\r\n    beepBoop = () => {\r\n        console.log(this.props);\r\n        Cookies.set('hi','there');\r\n        Cookies.get();\r\n    };\r\n\r\n    render(){\r\n\r\n        // const { classes } = this.props;\r\n\r\n        return (\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <Tabs value={this.getCurrentPath() || 0} onChange={this.handleChange}>\r\n                        <Tab key='0' component={Link} to={{pathname: '/apikeymanagement'}} label='API Keys' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='1' component={Link} to={{pathname: '/'}} label='Catalog' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        <Tab key='2' component={Link} to={{pathname: '/visualization'}} label='Visualization' onClick={this.props.restoreInterfaceDefaults}/>\r\n                        {this.props.user ? '' : <Tab key='3' component={Link} to={{pathname: '/register'}} label='Register' onClick={this.props.restoreInterfaceDefaults}/>}\r\n                        {this.props.user ? '' : <Tab key='4' label='Log In' onClick={this.props.showLoginDialog}/>}\r\n                        {this.props.user ? <Tab key='5' label={`Welcome ${this.props.user.firstName} ${this.props.user.lastName}!`}/> : ''}\r\n                        {this.props.user ? <Tab key='4' label='Log Out' onClick={this.handleLogOut}/> : ''}                        \r\n                        <Tab key='6' label='Debug' onClick={this.beepBoop}/>\r\n                    </Tabs>                    \r\n                </Toolbar>\r\n                <LoginDialog clearState={this.clearState} username={this.state.username} password={this.state.password} handleChange={this.handleChange}/>\r\n            </AppBar>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(TopNavBar)));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { snackbarClose } from '../Redux/actions/ui';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    snackbarIsOpen: state.snackbarIsOpen,\r\n    snackbarMessage: state.snackbarMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    snackbarClose,\r\n}\r\n\r\nconst SnackbarWrapper = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Snackbar \r\n                autoHideDuration={3500} \r\n                message={props.snackbarMessage}\r\n                onClose={props.snackbarClose}\r\n                open={props.snackbarIsOpen}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SnackbarWrapper);","import React from 'react'\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\r\n\r\nimport Home from './Components/Home';\r\nimport Catalog from './Components/Catalog';\r\nimport Register from './Components/Register';\r\nimport Visualization from './Components/Visualization';\r\nimport TopNavBar from './Components/TopNavBar';\r\nimport SnackbarWrapper from './Components/SnackbarWrapper';\r\n\r\nexport default props => (\r\n    <BrowserRouter>\r\n        <TopNavBar/>\r\n        <SnackbarWrapper/>\r\n        <Switch>\r\n          <Route exact path='/apikeymanagement' component={ Home } />\r\n          <Route exact path='/' component={ Catalog } />\r\n          <Route exact path='/register' component={ Register } />\r\n          <Route exact path='/visualization' component={ Visualization } />\r\n        </Switch>\r\n    </BrowserRouter>\r\n  )","import React, { Component } from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\n\nimport './App.css';\nimport Routes from './routes';\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: grey[900]\n    },\n    primary: {\n      main: grey[600]\n    }\n  },\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  },\n  overrides: {\n    MuiOutlinedInput: {\n      input: {\n        padding: '12px 14px'\n      }\n    },\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: '8px'\n      }\n    }\n  }\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n          <Routes />\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport 'ag-grid-enterprise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './Redux/store';\n\nimport App from './App'\n\nimport {LicenseManager} from \"ag-grid-enterprise\";\nLicenseManager.setLicenseKey(\"Evaluation_License-_Not_For_Production_Valid_Until_2_July_2019__MTU2MjAyMjAwMDAwMA==caa187fc06c8c340bcb9897b015a3cb5\");\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}